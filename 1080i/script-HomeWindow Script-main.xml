<?xml version="1.0" encoding="utf-8"?>
<window>
    <defaultcontrol always="true">9004</defaultcontrol>
    <backgroundcolor>backgroundcolor</backgroundcolor>
    <include condition="!Skin.HasSetting(firstrun4.0)">AutoConfig</include>
    <onload>RunScript(script.skinshortcuts,type=buildxml&amp;mainmenuID=9000&amp;group=weather|movies|settings|shutdown|tvshows|livetv|musicvideos|pictures|programs|dvd|videos|music)</onload>
    <onload condition="!Window.Previous(startup) + System.HasAddon(plugin.image.mypicsdb)">RunScript(plugin.image.mypicsdb,0,?action='setproperties'&amp;method='Latest'&amp;sort='Added'&amp;limit=10)</onload>
    <onload condition="!Window.Previous(startup) + System.HasAddon(plugin.image.mypicsdb)">RunScript(plugin.image.mypicsdb,0,?action='setproperties'&amp;method='Random'&amp;sort='Added'&amp;limit=10)</onload>
    <onload condition="!Window.Previous(startup)">SetProperty(SkinWidgets_RandomItems_Update,true)</onload>
    <onunload>ClearProperty(PanelWidgetInfo,Home)</onunload>
    <onunload>ClearProperty(PanelWidget2Info,Home)</onunload>
    <allowoverlay>yes</allowoverlay>
    <controls>
        <control type="button" id="9004">
            <include>HiddenObject</include>
            <onfocus condition="Window.Previous(startup) + !IsEmpty(Skin.String(CustomFocusOffset))">$VAR[HomeCustomStartupFocus]</onfocus>
            <onfocus condition="!IsEmpty(Window(home).Property(SettingsFocusOffset))">$VAR[SettingsCustomStartupFocus]</onfocus>
            <onfocus>ClearProperty(SettingsFocusOffset,home)</onfocus>
            <onfocus>SetProperty(Widget1Type,$INFO[Container(9000).ListItem.Property(Widget)],home)</onfocus>
            <onfocus>SetProperty(Widget2Type,$INFO[Container(9000).ListItem.Property(Widget2)],home)</onfocus>
            <onfocus>SetFocus(9000)</onfocus>
            <onleft>SetFocus(9000)</onleft>
            <onright>SetFocus(9000)</onright>
            <ondown>SetFocus(9000)</ondown>
            <onup>SetFocus(9000)</onup>
            <onclick>SetFocus(9000)</onclick>
        </control>
        <control type="button" id="9006">
            <include>HiddenObject</include>
            <onfocus>SetFocus(9000)</onfocus>
            <onfocus>$INFO[Container(9000).ListItem.Property(Path)]</onfocus>
        </control>
        <control type="button" id="9007">
            <include>HiddenObject</include>
            <onfocus condition="Control.IsVisible(5000)">SetProperty(MenuItem,$INFO[Container(5010).ListItem.Property(ID)],home)</onfocus>
            <onfocus condition="Control.IsVisible(5000)">SetFocus(5010)</onfocus>
            <onfocus condition="Control.IsVisible(5000)">$INFO[Container(5010).ListItem.Property(Path)]</onfocus>
            <onfocus condition="Control.IsVisible(5000) + IsEmpty(Container(5010).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
            <onfocus condition="Control.IsVisible(8998)">SetProperty(MenuItem,$INFO[Container(8000).ListItem.Property(ID)],home)</onfocus>
            <onfocus condition="Control.IsVisible(8998)">SetFocus(8000)</onfocus>
            <onfocus condition="Control.IsVisible(8998)">$INFO[Container(8000).ListItem.Property(Path)]</onfocus>
            <onfocus condition="Control.IsVisible(8998) + IsEmpty(Container(8000).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
        </control>
        <control type="button" id="9008">
            <include>HiddenObject</include>
            <onfocus>SetFocus(6010)</onfocus>
            <onfocus condition="Control.IsVisible(6000)">SetProperty(MenuItem,$INFO[Container(6010).ListItem.Property(ID)],home)</onfocus>
            <onfocus condition="Control.IsVisible(6000)">SetFocus(6010)</onfocus>
            <onfocus condition="Control.IsVisible(6000)">$INFO[Container(6010).ListItem.Property(Path)]</onfocus>
            <onfocus condition="Control.IsVisible(6000) + IsEmpty(Container(6010).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
            <onfocus condition="Control.IsVisible(7998)">SetProperty(MenuItem,$INFO[Container(7000).ListItem.Property(ID)],home)</onfocus>
            <onfocus condition="Control.IsVisible(7998)">SetFocus(7000)</onfocus>
            <onfocus condition="Control.IsVisible(7998)">$INFO[Container(7000).ListItem.Property(Path)]</onfocus>
            <onfocus condition="Control.IsVisible(7998) + IsEmpty(Container(7000).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
        </control>
        <control type="button" id="5014">
            <include>HiddenObject</include>
            <onfocus>SetProperty(WidgetType,$INFO[Control.GetLabel(4321)],home)</onfocus>
            <onfocus>SetProperty(WidgetPosition,Widget1,home)</onfocus>
            <onfocus>RunScript(script.home,container=8000,focuscontrol=8020)</onfocus>
            <visible>Substring(Control.GetLabel(4321),classic)</visible>
        </control>
        <control type="button" id="5014">
            <include>HiddenObject</include>
            <onfocus>SetProperty(PanelWidgetInfo,true,home)</onfocus>
            <onfocus>SetProperty(WidgetPosition,Widget1,home)</onfocus>
            <onfocus>SetProperty(WidgetType,$INFO[Control.GetLabel(4321)],home)</onfocus>
            <onfocus condition="Substring(Control.GetLabel(4321),movie) + IsEmpty(Container(5010).ListItem.DBID)">RunScript(script.extendedinfo,info=extendedinfo,id=$INFO[Container(5010).ListItem.Property(ID)],imdbid=$INFO[Container(5010).ListItem.Property(imdbid)])</onfocus>
            <onfocus>RunScript(script.home,container=5010,focuscontrol=5055)</onfocus>
            <visible>!Substring(Control.GetLabel(4321),classic)</visible>
        </control>
        <control type="button" id="6014">
            <include>HiddenObject</include>
            <onfocus>SetProperty(WidgetType,$INFO[Control.GetLabel(4325)],home)</onfocus>
            <onfocus>SetProperty(WidgetPosition,Widget2,home)</onfocus>
            <onfocus>RunScript(script.home,container=7000,focuscontrol=7020)</onfocus>
            <visible>Substring(Control.GetLabel(4325),classic)</visible>
        </control>
        <control type="button" id="6014">
            <include>HiddenObject</include>
            <onfocus>SetProperty(PanelWidget2Info,true,home)</onfocus>
            <onfocus>SetProperty(WidgetPosition,Widget2,home)</onfocus>
            <onfocus>SetProperty(WidgetType,$INFO[Control.GetLabel(4325)],home)</onfocus>
            <onfocus condition="Substring(Control.GetLabel(4325),movie) + IsEmpty(Container(6010).ListItem.DBID)">RunScript(script.extendedinfo,info=extendedinfo,id=$INFO[Container(6010).ListItem.Property(ID)],imdbid=$INFO[Container(6010).ListItem.Property(imdbid)])</onfocus>
            <onfocus>RunScript(script.home,container=6010,focuscontrol=5055)</onfocus>
            <visible>!Substring(Control.GetLabel(4325),classic)</visible>
        </control>
        <control type="button" id="9011">
            <include>HiddenObject</include>
            <onfocus>SetFocus(9000)</onfocus>
        </control>
        <include>MainMenuCommonContent</include>
        <!-- Fanart -->
        <control type="group">
            <!--              <visible>![[Player.HasVideo + !Skin.HasSetting(ShowBackgroundVideo)] | [Player.HasAudio + !Skin.HasSetting(ShowBackgroundVis)]]</visible>
 -->
            <control type="group">
                <animation effect="zoom" start="110" end="130" center="auto" time="12000" pulse="true" delay="480" condition="Skin.HasSetting(animatedbg)">Conditional</animation>
                <animation effect="slide" start="-15,-15" end="15,15" time="6000" pulse="true" delay="480" condition="Skin.HasSetting(animatedbg)">Conditional</animation>

            <control type="multiimage">
                <aspectratio align="center" aligny="top">scale</aspectratio>
                <imagepath background="true" fallback="special://skin/backgrounds/videos">$VAR[HomeMainFanartVar]</imagepath>
                <fadetime>600</fadetime>
                <animation effect="fade" time="480">Visible</animation>
                <animation effect="fade" time="480">Hidden</animation>
            </control>
            <include>InteractiveCasesBackground</include>
            <include>LiveCDCasesbackground</include>
            <include>LiveNoCasesbackground</include>
            <include>cdwall-musicvisualisation</include>
            <include>MovieWall</include>
            <control type="image">
                <aspectratio align="center" aligny="top">scale</aspectratio>
                <texture background="true">$VAR[HomeWidgetFanartVar]</texture>
                <fadetime>600</fadetime>
                <include>FullscreenDimensions</include>
            </control>
            <!-- Music ExtraFanart -->
            <include condition="!IsEmpty(Skin.String(ArtistsLogosPath))">MusicExtraFanartHome</include>
        <control type="multiimage">
            <aspectratio align="center" aligny="top">scale</aspectratio>
            <imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
            <fadetime>600</fadetime>
            <visible>Player.HasAudio + Skin.HasSetting(artistslideshowhome)</visible>
            <include>Animation_VisibleChange400</include>
        </control>
                    </control>


            <include>CommonMediaPlayingBackground</include>
        </control>
        <!-- Home Fullscreen Video -->

            <control type="image">
            <visible>!Skin.HasSetting(DisableGlowbar)</visible>
            <include>Animation_VisibleChange400</include>
            <visible>IsEmpty(Window(home).Property(DisableWidgets)) | Control.IsVisible(8995)</visible>
            <visible>![!IsEmpty(Window(home).Property(DisableWidgets)) + Player.HasVideo + Skin.HasSetting(ShowBackgroundVideo)]</visible>
                 <texture>common/bgcolor.png</texture>
                <include>FullscreenDimensions</include>
                <colordiffuse>$INFO[Skin.String(BackgroundDarkness)]</colordiffuse>
            </control>
        <control type="group">
            <visible>![Window.IsActive(1159) + IsEmpty(Window(home).Property(ShowMainMenu))]</visible>
            <include>Animation_VisibleChange400</include>
            <control type="group">
                <visible>Skin.HasSetting(DisableGlowbar)</visible>
                <include>Animation_VisibleChangeDelayed</include>
                <include>Animation_WindowFade200</include>
                <control type="image">
                    <posy>480</posy>
                    <width>1920</width>
                    <height>600</height>
                    <texture>home/nowplaying_shadow.png</texture>
                    <colordiffuse>black</colordiffuse>
                    <visible>[Control.IsVisible(8995) + Skin.HasSetting(movenowplayingwidget)] | Control.HasFocus(8000) | Control.HasFocus(8020) | Control.IsVisible(5000) | Substring(Control.GetLabel(4321),weather)</visible>
                    <include>Animation_VisibleChangeDelayed</include>
                    <animation effect="slide" time="320" tween="cubic" easing="inout" end="0,-225" condition="Skin.HasSetting(lowermainmenu)">Conditional</animation>
                </control>
                <control type="image">
                    <width>1920</width>
                    <height>600</height>
                    <texture flipy="true">home/nowplaying_shadow.png</texture>
                    <colordiffuse>black</colordiffuse>
                    <include>Animation_VisibleChangeDelayed</include>
                    <visible>[Control.IsVisible(8995) + !Skin.HasSetting(movenowplayingwidget)] | Control.HasFocus(7000) | Control.HasFocus(7020) | Control.IsVisible(6000) | Substring(Control.GetLabel(4325),weather)</visible>
                </control>
            </control>
            <include>RSSPanel</include>
            <include>MainMenuBottomBar</include>
            <control type="group">
                <animation effect="slide" end="0,330" time="560" tween="cubic" delay="160" condition="!Skin.HasSetting(lowermainmenu) + !IsEmpty(Window(home).Property(PanelWidget2Info))">Conditional</animation>
                <animation effect="slide" end="0,-330" time="560" tween="cubic" delay="160" condition="!Skin.HasSetting(lowermainmenu) + !IsEmpty(Window(home).Property(PanelWidgetInfo))">Conditional</animation>
                <control type="group">
                    <posy>472</posy>
                    <include>LibraryStats</include>
                    <include>TimePanel</include>
                </control>
                <control type="group">
                    <include>FullscreenDimensions</include>
                    <animation effect="slide" end="0,338" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(lowermainmenu)">Conditional</animation>
                    <include>Animation_OpenCloseZoom</include>
                    <control type="group">
                        <animation effect="zoom" end="80" center="960,520" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                        <!-- Submenu -->
                        <control type="image">
                            <posx>935</posx>
                            <posy>613</posy>
                            <width>50</width>
                            <height>15</height>
                            <texture>arrowdown.png</texture>
                            <colordiffuse>white</colordiffuse>
                            <!--                     <animation effect="slide" end="0,40" time="0" condition="[!Skin.HasSetting(rsshomelow) + !Skin.HasSetting(DisableRSS)]">Conditional</animation>
     -->
                            <visible>Control.HasFocus(9000) + !Skin.HasSetting(showsubmenu) + IntegerGreaterThan(Container(9010).NumItems,0)</visible>
                            <animation effect="zoom" start="100,0" end="100,100" time="400" delay="160" tween="cubic" center="0,613" easing="inout">VisibleChange</animation>
                        </control>
                        <control type="group" id="9001">
                            <posx>240</posx>
                            <posy>609</posy>
                            <animation effect="zoom" end="120" center="960,610" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                            <animation effect="fade" start="100" end="0" time="240" condition="!Control.HasFocus(9010) + ![IntegerGreaterThan(Container(9010).NumItems,0) + Skin.HasSetting(showsubmenu)]">conditional</animation>
                            <animation effect="slide" end="0,-60" time="240" tween="cubic" easing="inout" condition="!Control.HasFocus(9010) + ![IntegerGreaterThan(Container(9010).NumItems,0) + Skin.HasSetting(showsubmenu)]">conditional</animation>
                            <control type="image">
                                <posx>70</posx>
                                <posy>3</posy>
                                <width>1300</width>
                                <height>87</height>
                                <texture>$VAR[SubMenuImageVar]</texture>
                                <colordiffuse>$VAR[ExtendedColorVar]</colordiffuse>
                            </control>
                            <include condition="Skin.HasSetting(submenufixedlist)">SubMenuFixedList</include>
                            <include condition="!Skin.HasSetting(submenufixedlist)">SubMenuWrapList</include>
                        </control>
                        <!-- Home Menu Bar -->
                        <control type="image">
                            <posy>453</posy>
                            <width>1920</width>
                            <height>225</height>
                            <texture>$VAR[HomeMenuBackVar]</texture>
                            <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
                            <animation effect="zoom" end="125,100" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                            <animation effect="fade" start="100" end="90" time="40" condition="Skin.HasSetting(glasshome) + ![Player.HasMedia + System.IdleTime(8)]">Conditional</animation>
                        </control>
                        <control type="image">
                            <posy>453</posy>
                            <width>1920</width>
                            <height>225</height>
                            <texture>home/homemenu_back_glow.png</texture>
                            <colordiffuse>$VAR[AreaColorVar]</colordiffuse>
                            <animation effect="zoom" end="125,100" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                            <include>PanelGlowFade</include>
                            <include>Animation_VisibleChange400</include>
                            <visible>!Skin.HasSetting(DisableGlowbar) | Skin.HasSetting(classichome)</visible>
                        </control>
                        <!-- Home Menu -->
                        <control type="button" id="8993">
                            <include>HiddenObject</include>
                            <onfocus>ClearProperty(PanelWidgetInfo,Home)</onfocus>
                            <onfocus>SetFocus(9000)</onfocus>
                        </control>
                        <!--focus first widget-->
                        <control type="button" id="4444">
                            <include>HiddenObject</include>
                            <onfocus condition="Control.IsVisible(5000)">SetFocus(5000)</onfocus>
                            <onfocus>SetProperty(WidgetPosition,Widget1,home)</onfocus>
                            <onfocus condition="Control.IsVisible(8998)">SetFocus(8000,0)</onfocus>
                            <onfocus condition="Control.IsVisible(8998)">SetFocus(8000)</onfocus>
                            <visible>Control.IsVisible(5000) | Control.IsVisible(8998)</visible>
                            <visible>IsEmpty(Window(home).Property(DisableWidgets))</visible>
                            <visible>!Substring(Control.GetLabel(4321),system)</visible>
                        </control>
                        <!--focus second widget-->
                        <control type="button" id="4445">
                            <include>HiddenObject</include>
                            <onfocus>SetProperty(WidgetPosition,Widget2,home)</onfocus>
                            <onfocus condition="Control.IsVisible(6000)">SetFocus(6000)</onfocus>
                            <onfocus condition="Control.IsVisible(7998)">SetFocus(7000,0)</onfocus>
                            <onfocus condition="Control.IsVisible(7998)">SetFocus(7000)</onfocus>
                            <visible>Control.IsVisible(6000) | Control.IsVisible(7998)</visible>
                            <visible>IsEmpty(Window(home).Property(DisableWidgets))</visible>
                            <visible>!Substring(Control.GetLabel(4325),system)</visible>
                        </control>
                        <include condition="Skin.HasSetting(mainmenufixedlist)">MainMenuFixedList</include>
                        <include condition="!Skin.HasSetting(mainmenufixedlist)">MainMenuWrapList</include>
                        <control type="group">
                            <animation effect="zoom" end="125,99" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                            <include>Furniture_ClassicHomeGradient</include>
                            <include>Neon_Home</include>
                        </control>
                    </control>
                </control>
                <!--Weather info-->
                <!-- Music Info -->
            </control>
            <!-- Featured widget -->
            <control type="group">
                <visible>IsEmpty(Window(home).Property(PanelWidget2Info))</visible>
                <animation type="Visible">
                    <effect type="zoom" delay="400" start="150" end="100" center="960,540" time="400" tween="cubic" />
                    <effect type="fade" delay="400" end="100" time="240" />
                </animation>
                <animation type="Hidden">
                    <effect type="fade" start="100" end="0" time="240" />
                    <effect type="zoom" start="100" end="130" center="960,540" time="240" tween="cubic" easing="in" />
                </animation>
                <include>HomePanelWidget</include>
                <include condition="!IsEmpty(Weather.Plugin)">Weather_Widget</include>
                <include>RecentWidget</include>
            </control>
            <control type="group">
                <visible>IsEmpty(Window(home).Property(PanelWidgetInfo))</visible>
                <animation type="Visible">
                    <effect type="zoom" delay="400" start="150" end="100" center="960,540" time="400" tween="cubic" />
                    <effect type="fade" delay="400" end="100" time="240" />
                </animation>
                <animation type="Hidden">
                    <effect type="fade" start="100" end="0" time="240" />
                    <effect type="zoom" start="100" end="130" center="960,540" time="240" tween="cubic" easing="in" />
                </animation>
                <include>HomePanelWidget2</include>
                <include condition="!IsEmpty(Weather.Plugin)">Weather_Widget2</include>
                <include>RecentWidget2</include>
            </control>
            <control type="group">
                <posx>135</posx>
                <include>Animation_OpenCloseZoom</include>
                <posy>389</posy>
                <width>1920</width>
                <height>825</height>
                <animation type="Conditional" condition="true">
                    <effect type="zoom" start="100" end="97" center="960,540" time="240" tween="cubic" />
                </animation>
                <animation effect="slide" end="0,285" time="0" tween="cubic" easing="inout" condition="!Skin.HasSetting(lowermainmenu) + Stringcompare(Window(home).Property(WidgetPosition),Widget1)">Conditional</animation>
                <animation effect="slide" end="0,18" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(lowermainmenu) + [Skin.HasSetting(totalshomehigh)]">Conditional</animation>
                <animation effect="slide" end="0,-31" time="320" tween="cubic" easing="inout" condition="!Skin.HasSetting(lowermainmenu) + Skin.HasSetting(rsshomelow) + !Skin.HasSetting(DisableRSS)">Conditional</animation>
                <visible>!IsEmpty(Window(home).Property(WidgetType))</visible>
                <visible>[!IsEmpty(Window(home).Property(PanelWidgetInfo)) | !IsEmpty(Window(home).Property(PanelWidget2Info))]</visible>
                <visible>!Window.IsActive(1165) + !Window.IsActive(1166)</visible>
                <animation type="Visible" reversible="false" condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">
                    <include condition="Skin.HasSetting(lowermainmenu)">Animation_LargePanelFlipUp1</include>
                    <include condition="!Skin.HasSetting(lowermainmenu)">Animation_LargePanelFlipDown1</include>
                </animation>
                <animation type="Hidden" reversible="false">
                    <include condition="Skin.HasSetting(lowermainmenu)">Animation_LargePanelFlipDown2</include>
                    <include condition="!Skin.HasSetting(lowermainmenu)">Animation_LargePanelFlipUp2</include>
                </animation>
                <animation type="Visible" reversible="false" condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">
                    <include>Animation_LargePanelFlipUp1</include>
                </animation>
                <include>WidgetInfoPanel</include>
            </control>
            <include condition="!Skin.HasSetting(nohomepageMusicinfo) | !Skin.HasSetting(homepageVideoinfo)">Furniture_HomeNowPlaying</include>
            <control type="group">
                <posx>0</posx>
                <posy>20</posy>
                <visible>!IsEmpty(Window(home).Property(DisableWidgets)) + !Player.HasMedia + !Window.IsActive(1154)</visible>
                <include>Animation_WindowFade200</include>
                <animation type="Visible">
                    <effect type="zoom" start="150" end="100" center="960,540" time="400" tween="cubic" />
                    <effect type="fade" end="100" time="240" />
                </animation>
                <animation type="Hidden">
                    <effect type="fade" start="100" end="0" time="240" />
                    <effect type="zoom" start="100" end="130" center="960,540" time="240" tween="cubic" easing="in" />
                </animation>
                <control type="image">
                    <posx>-20</posx>
                    <posy>-20</posy>
                    <width>290</width>
                    <height>100</height>
                    <texture>home/fade.png</texture>
                    <animation effect="fade" end="60" time="0" condition="true">Conditional</animation>
                    <colordiffuse>black</colordiffuse>
                </control>
                <control type="image">
                    <posx>0</posx>
                    <posy>6</posy>
                    <width>65</width>
                    <height>49</height>
                    <aspectratio aligny="top">scale</aspectratio>
                    <texture>special://skin/extras/BigIcons/Information.png</texture>
                    <animation effect="zoom" start="80" end="85" delay="400" time="840" center="auto" tween="cubic" easing="out" pulse="true" condition="true">Conditional</animation>
                    <colordiffuse>white</colordiffuse>
                </control>
                <control type="image">
                    <posx>50</posx>
                    <posy>10</posy>
                    <width>50</width>
                    <height>38</height>
                    <aspectratio aligny="top">scale</aspectratio>
                    <animation effect="fade" start="100" end="80" time="440" delay="800" center="auto" tween="cubic" easing="out" pulse="true" condition="true">Conditional</animation>
                    <texture>special://skin/extras/BigIcons/widgets.png</texture>
                    <colordiffuse>white4</colordiffuse>
                </control>
            </control>
            <control type="group">
                <control type="image">
                    <texture>common/bgcolor.png</texture>
                    <include>FullscreenDimensions</include>
                    <visible>Control.HasFocus(22222) | !IsEmpty(Window(home).Property(weatherwidget))</visible>
                    <include>Animation_VisibleChange400</include>
                </control>
                <control type="image">
                    <aspectratio>keep</aspectratio>
                    <texture background="true">$VAR[HomeFSImageVar]</texture>
                    <fadetime>600</fadetime>
                    <include>FullscreenDimensions</include>
                    <animation effect="fade" time="320">VisibleChange</animation>
                    <visible>Control.HasFocus(22222)</visible>
                </control>
                <control type="group">
                    <visible>!IsEmpty(Window(home).Property(weatherwidget))</visible>
                    <control type="multiimage">
                        <aligny>center</aligny>
                        <aspectratio>keep</aspectratio>
                        <imagepath>$INFO[Window(weather).Property(MapPath)]</imagepath>
                        <fadetime>0</fadetime>
                        <include>FullscreenDimensions</include>
                        <timeperimage>500</timeperimage>
                        <pauseatend>1000</pauseatend>
                        <randomize>false</randomize>
                    </control>
                    <control type="image">
                        <posx>500</posx>
                        <posy>990</posy>
                        <width>920</width>
                        <height>47</height>
                        <texture>weather/whitepanel.png</texture>
                    </control>
                    <control type="image">
                        <posx>480</posx>
                        <posy>992</posy>
                        <width>506</width>
                        <height>42</height>
                        <aspectratio>keep</aspectratio>
                        <texture>weather/key1.png</texture>
                    </control>
                    <control type="image">
                        <posx>930</posx>
                        <posy>992</posy>
                        <width>506</width>
                        <height>42</height>
                        <aspectratio>keep</aspectratio>
                        <texture>weather/key2.png</texture>
                    </control>
                </control>
                <control type="button" id="22222">
                    <include>HiddenObject</include>
                    <onleft condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">Control.Move(5010,-1)</onleft>
                    <onright condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">Control.Move(5010,1)</onright>
                    <onup condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">SetFocus(5010)</onup>
                    <ondown condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">SetFocus(5010)</ondown>
                    <onback condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">SetFocus(5010)</onback>
                    <onleft condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">Control.Move(6010,-1)</onleft>
                    <onright condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">Control.Move(6010,1)</onright>
                    <onup condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">SetFocus(6010)</onup>
                    <ondown condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">SetFocus(6010)</ondown>
                    <onback condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">SetFocus(6010)</onback>
                </control>
            </control>
        </control>
    </controls>
</window>
